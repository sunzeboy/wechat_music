<style lang="less">
    .section{
        text-align: center;
    }
    .selected{
      background-color:green !important;
    }
    .normal{
      background-color:gray !important;
    }
    .sms-checkbox{
      padding-left:15px;
      padding-bottom: 10px;
    }
    .music-type-btn{
      margin-left:5%;
      margin-top:5px;
      margin-bottom: 15px;
      width: 40%;
    }
</style>

<template>
    <van-cell-group>
      <van-cell title="请选择日期" bind:click="onDatePickerFocus" value="{{ topDateDesc }}" />
    </van-cell-group>
    <block wx:for-items="{{times}}" wx:for-index="index" wx:key="index" wx:for-item="item">
        <van-cell class="section" custom-class="{{item.isfree ? 'selected':'normal'}}" title="{{item.timedesc}}" size="large" >
          <van-icon wx:if="{{item.isfree}}" slot="right-icon" name="{{'music-o'}}" style="margin-left:25px;" class="custom-icon" color="#FB5A26" size="20px" @tap="dianMusic({{item}})"/>
        </van-cell>
    </block>
    <van-dialog
    title="点歌"
    use-slot
    show="{{ isDialogShow }}"
    show-cancel-button
    bind:close="onDialogClose(1)"
    bind:confirm="addOrderPlayList"
    async-close=true
    >
    <van-cell-group>
      <van-field
        value="{{ selectedMusicName }}"
        center
        clearable
        label="歌曲"
        placeholder="请选择歌曲"
        border="{{ false }}"
        use-button-slot
      >
        <van-button slot="button" size="small" type="primary" @tap="selectMusic">选择歌曲</van-button>
      </van-field>
      <van-field
        value="{{ phone }}"
        label="手机号"
        placeholder="请输入手机号"
        error-message="{{errorMessagePhone}}"
        border="{{ false }}"
        bind:change="typePhone"
      />
      <van-checkbox value="{{ isNeedSMS }}" custom-class="sms-checkbox" bind:change="onSMSChange">短信通知</van-checkbox>
        <van-cell title="请选择通知时间" bind:click="typeNotifyTime" value="{{ notifyTimeDesc }}" />
      <p style="color: red;">点播歌曲需要花费10点积分</p>
    </van-cell-group>
    </van-dialog>

    <!-- <van-action-sheet
      show="{{ actionSheetShow }}"
      actions="{{ actionSheetDatas }}"
      cancel-text="取消"
      bind:select="onActionSheetSelect"
      z-index=100000
      close-on-click-overlay=true
      bind:cancel="onCancelActionSheet"
    /> -->
    <van-dialog
      title="选择歌曲类型"
      use-slot
      show="{{ actionSheetShow }}"
      show-cancel-button
      bind:close="onDialogClose"
      bind:confirm="addOrderPlayList"
      async-close=true
    >
      <block wx:for-items="{{actionSheetDatas}}" wx:for-index="index" wx:key="index" wx:for-item="item">
          <van-button custom-class="music-type-btn" @tap='selectMusicType({{item}})' type="primary">{{item.title}}</van-button>
      </block>
    </van-dialog>

    <van-popup
      show="{{ isTimePickerShow1 }}"
      position="bottom"
      overlay="{{ false }}"
      bind:close="onClose"
    >
    <van-cell title="可选时段" class="section">
    </van-cell>
    <van-datetime-picker
      type="date"
      value="{{ currentDate }}"
      bind:input="onSelectDate"
      bind:cancel="onClose"
      bind:confirm="onClose"
      min-date="{{ minDate1 }}"
    />
    </van-popup>
    <van-popup
      show="{{ isTimePickerShow2 }}"
      position="bottom"
      overlay="{{ false }}"
      z-index=100001
      bind:close="onClose"
    >
    <van-cell title="可选时段" class="section">
    </van-cell>
    <van-datetime-picker
      type="datetime"
      value="{{ currentDate2 }}"
      bind:cancel="onClose"
      bind:confirm="onClose"
      bind:input="onSelectDate2"
      min-date="{{ minDate2 }}"
    />
    </van-popup>

    <van-toast id="van-toast" />
</template>

<script>
  import wepy from 'wepy'
  import * as api from '../api/api.js'
  import Toast from '../styles/vant/toast/toast';


  export default class Shop_Dian_Music extends wepy.page {
    config = {
      navigationBarTitleText: '店铺点歌',
      component: true,
      usingComponents: {
        'van-cell': '/styles/vant/cell/index',
        'van-cell-group': '/styles/vant/cell-group/index',
        'van-button': '/styles/vant/button/index',
        'van-icon': '/styles/vant/icon/index',
        'van-field': '/styles/vant/field/index',
        'van-swipe-cell': '/styles/vant/swipe-cell/index',
        "van-toast": "/styles/vant/toast/index",
        "van-datetime-picker": "/styles/vant/datetime-picker/index",
        'van-dialog': '/styles/vant/dialog/index',
        'van-checkbox': '/styles/vant/checkbox/index',
        "van-popup": "/styles/vant/popup/index",
        "van-action-sheet": "/styles/vant/action-sheet/index"
      }
    }
    components = {
      
    }


    data = {
      isTimePickerShow1:false,
      isTimePickerShow2:false,
      currentDate: new Date().getTime(),
      currentDate2: new Date().getTime(),
      minDate1: new Date().getTime()+7*24*3600*1000,
      minDate2: new Date().getTime(),
      times:["12:00","13:00","14:00","15:00","16:00"],
      checked: true,
      isNeedSMS: false,
      isDialogShow: false,
      selectedMusicName:'',
      actionSheetShow: false,
      errorMessagePhone:'',
      filesid:'',
      daytick:'',
      phone:'',
      musicTypeList:[
        {
          'title':'流行1',
        },
        {
          'title':'流行2',
        },
        {
          'title':'流行3',
        },
        {
          'title':'流行4',
        },
        {
          'title':'流行5',
        },
        {
          'title':'流行6',
        },
        {
          'title':'流行7',
        },
        {
          'title':'流行8',
        },
        {
          'title':'流行9',
        },
      ],
      actionSheetDatas: [
        {
          name: '歌曲1',
          subname: '歌手：111',
        },
        {
          name: '歌曲2',
          subname: '歌手：222',
        },
        {
          name: '歌曲3',
          subname: '歌手：333',
        },
        {
          name: '歌曲4',
          subname: '歌手：444',
        }
      ],
      
    }

    computed = {
      topDateDesc () {
        return this.dateFormat(this.currentDate)
      },
      notifyTimeDesc () {
        return this.dateTimeFormat(this.currentDate2)
      }
    }
    dateFormat(timestamp){
      var time = new Date(timestamp)    //先将时间戳转为Date对象，然后才能使用Date的方法
      var year = time.getFullYear(),
          month = time.getMonth() + 1 ,  //月份是从0开始的
          day = time.getDate(),
          hour = time.getHours(),
          minute = time.getMinutes(),
          second = time.getSeconds()
          //add0()方法在后面定义
      return  year+'-'+this.add0(month)+'-'+ this.add0(day);
    }
    dateTimeFormat(timestamp){
      var time = new Date(timestamp)    //先将时间戳转为Date对象，然后才能使用Date的方法
      var year = time.getFullYear(),
          month = time.getMonth() + 1 ,  //月份是从0开始的
          day = time.getDate(),
          hour = time.getHours(),
          minute = time.getMinutes(),
          second = time.getSeconds()
          //add0()方法在后面定义
      return  year+'-'+this.add0(month)+'-'+ this.add0(day)+' '+this.add0(hour)+':'+this.add0(minute)+':'+this.add0(second) ;
    }
    add0(m){
      return m < 10 ? '0' + m: m
    }

    methods = {
      selectMusicType(item) {
        this.actionSheetShow = false
        wepy.navigateTo({
          url: '/pages/music_select_list?musiclist='+ encodeURIComponent(JSON.stringify(item))
        })
      },
      onClose(){
        this.isTimePickerShow1 = false
        this.isTimePickerShow2 = false
      },
      onDatePickerFocus () {
        this.isTimePickerShow1 = true
      },
      typeNotifyTime (){
        this.isTimePickerShow2 = true
      },
      dianMusic(item) {
        console.log(item);
        this.daytick = item.daytick
        this.isDialogShow = true
      },
      onDialogClose(type) {
        if (type == '1') 
        {
          this.isDialogShow = false
        } 
        else
        {
          this.actionSheetShow = false
        }
      },
      selectMusic(){
        this.actionSheetShow = true
      },
      onActionSheetClose(){

      },
      onActionSheetSelect(event){
        console.log(event);
        this.filesid = event.detail.sid
        this.selectedMusicName = event.detail.name
        this.actionSheetShow = false
      },
      onCancelActionSheet(){
        this.actionSheetShow = false
      },
      onSMSChange(event){
        this.isNeedSMS = event.detail
      },
      onSelectDate(event){
        this.currentDate = event.detail
        this.custom_orderplay_gettimes()
      },
      onSelectDate2(event){
        this.currentDate2 = event.detail
      },
      addOrderPlayList(){
        this.custom_orderplay()
      },
      typePhone(event){
        this.phone = event.detail
      }
    }
    custom_secondToDate(result) {
        var h = Math.floor(result / 3600) < 10 ? '0'+Math.floor(result / 3600) : Math.floor(result / 3600);
        var m = Math.floor((result / 60 % 60)) < 10 ? '0' + Math.floor((result / 60 % 60)) : Math.floor((result / 60 % 60));
        var s = Math.floor((result % 60)) < 10 ? '0' + Math.floor((result % 60)) : Math.floor((result % 60));
        return result = h + ":" + m + ":" + s;
    }
    custom_orderplay_gettimes(){
      let self = this;
      let url =
        'https://web.sound-genie.com/client/index.php?m=bbc&c=micro&a=s_orderplay_ticks&sid=449'/*+this.$parent.globalData.current_shopsid*/+'&daytime='+ (new Date(new Date(this.currentDate).toLocaleDateString()).getTime())/1000
      wepy.request({
        url: url,
        header: {
            "Cookie":"PHPSESSID="+self.$parent.globalData.sessionid
        },
        data: {},
        method: 'GET',
        success: function(res) {
          self.times = res.data.items;
          self.times.forEach(item => {
            item.timedesc = self.custom_secondToDate(item.daytick)
          });
          self.$apply();
        }
      });
    }
    custom_orderplay_getmusics(){
      let self = this;
      let url =
        'https://web.sound-genie.com/client/index.php?m=bbc&c=micro&a=s_orderplay_filelist&p=json'
      wepy.request({
        url: url,
        header: {
            "Cookie":"PHPSESSID="+self.$parent.globalData.sessionid
        },
        data: {},
        method: 'GET',
        success: function(res) {
          self.actionSheetDatas = res.data.items;
          self.$apply();
        }
      });
    }
    custom_orderplay(){
      if (this.filesid == '') 
      {
        Toast('请选择歌曲！')
        return;
      }
      if (this.phone.length != 11) 
      {
        // this.errorMessagePhone = '手机号不合法'
        Toast('手机号不合法!')
        return;
      }

      let self = this;
      let url =
        'https://web.sound-genie.com/client/index.php?m=bbc&c=micro&a=s_orderplay_add&p=json'
      wepy.request({
        url: url,
        header: {
            "Cookie":"PHPSESSID="+self.$parent.globalData.sessionid
        },
        data: {
          'shopsid':this.$parent.globalData.current_shopsid,
          'membersid':this.$parent.globalData.businessData.userInfo.sid,
          'filesid':this.filesid,
          'daytime':(new Date(new Date(this.currentDate).toLocaleDateString()).getTime())/1000,
          'daytick':this.daytick,
          'notify':this.isNeedSMS,
          'notifytime':this.currentDate2/1000,
          'mobi':this.phone
        },
        method: 'POST',
        success: function(res) {
          wepy.navigateBack({
            delta:1
          })
          self.$parent.globalData.dian_music = {}
        }
      });
    }
    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }
    onShow() {
      this.custom_orderplay_getmusics()
      if (this.$parent.globalData.dian_music) 
      {
        this.selectedMusicName = this.$parent.globalData.dian_music.title
        // TODO
        this.filesid = this.$parent.globalData.dian_music.sid
      }
    }
    onLoad() {
      
    }
  }
</script>
